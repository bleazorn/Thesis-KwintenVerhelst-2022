implement-fvars

p	::=	(begin s ...)
 	 	 	 	 
s	::=	(set! fvar reg)	
	|	(set! reg triv),
 	|	(set! reg (binop reg reg))
	|	(set! reg (+ reg int12))
	| 	(with-label label s)
	|	(jump trg)
	| 	(compare reg (relop reg reg))
	|	(jump-if label (relop reg reg))

trg	::=	reg
	|	label

triv	::= 	trg			
	| 	integer

opand	::= 	integer
	|	reg
	 	 	 	 
loc 	::=	reg
	|	fvar
 	 		 	 
binop	::=	+
 	|	*

relop	::=	 <
 	 |	 <=
 	 |	 =
 	 |	 >=
 	 |	 >
 	 |	 !=
 	 	 	 	 
reg	::=	cnull
 	|	cra
 	|	csp
 	|	cgp
 	|	ctp
 	|	cfp
 	|	cpc
 	|	ca0
 	|	ca1
 	|	ca2
 	|	ca3
 	|	ca4
 	|	ca5
 	|	ca6
 	|	ca7
 	|	cs0
 	|	cs1
 	|	cs2
 	|	cs3
 	|	cs4
 	|	cs5
 	|	cs6
 	|	cs7
 	|	cs8
 	|	cs9
 	|	cs10
 	|	cs11
 	|	ct0
 	|	ct1
 	|	ct2
 	|	ct3			
 	|	ct4			
 	|	ct5			
 	|	ct6

fvar 	::= 	fvar?

label	::=	label?
 	 	 	 	 
integer	::=	int32
	|	int12

int32	::=	int32?
int12	::=	int12?

#lang racket

(module+ test
  (require rackunit))

;
;(interp-values-lang p) â†’ integer?
;p : Values-lang-V3?
(define (interp-values-lang p)
  #t)

(module+ test
;interp-values-lang
  ;succes
  (check-equal? (interp-values-lang
                 '(module
                      (let ([x (let ([y 1] [x 2])
                                 (+ y x))])
                        (let ([y (let ([x 3]) x)])
                          (+ x y)))))
                6
                "interp-values-lang: succes-1: first frame fv"))
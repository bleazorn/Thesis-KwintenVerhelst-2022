implement-fvars

p	::=	(module (define label tail) ... tail)

pred	::=	(relop loc loc)
	|	(true)
	|	(false)
	|	(not pred)
	|	(begin effect ... pred)
	|	(if pred pred pred)

tail 	::= 	(jump trg)
	|	(begin effect ... tail)
	|	(if pred tail tail)
 	 	 	 	 
effect	::=	(set! loc triv)
	|	(set! loc (binop loc loc))
	|	(set! loc (+ loc integer))
	|	(begin effect ... effect)
	|	(if pred effect effect)
	| 	(return-point label tail)
 	 	 
trg	::=	loc
	|	label

triv	::= 	trg			
	| 	integer

opand	::= 	integer
	|	loc
	 	 
loc 	::=	reg
	|	fvar
 	 		 	 
binop	::=	+
 	|	*
 	|	-

relop	::=	 <
 	 |	 <=
 	 |	 =
 	 |	 >=
 	 |	 >
 	 |	 !=
	 	 	 	 
reg	::=	register?			

fvar 	::= 	fvar?

label	::=	label?
 	 	 	 	 
integer	::=	int32?
